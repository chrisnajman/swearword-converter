Could you fill in the following markdown snippet (look for '[text goes here]') describing the functionality of the listed JavaScript files, please.

- The JavaScript has been split into separate modules, improving code modularity:

  - `replace-swearwords.js`: [text goes here].
    - `convert-swearwords.js`: [text goes here].
    - `convert-btn-enable.js`: [text goes here].
    - `copy-to-clipboard-btn-enable.js`: [text goes here].
    - `auto-resize-textarea.js`: [text goes here].
  - `copy-to-clipboard.js`: [text goes here].


Here are the files:

index.html
```
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description"
        content="This page replaces swearwords with euphemisms. A list of convertible swearwords is included, so parental discretion is advised.">

    <title>Swearword Converter</title>
    <link rel="apple-touch-icon" sizes="180x180" href="./apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="./favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="./favicon-16x16.png">
    <link rel="manifest" href="./site.webmanifest">
    <link rel="stylesheet" href="./model.css">
    <script type="application/ld+json">
        {
        "@context": "https://schema.org",
        "@type": "WebPage",
        "name": "Swearword Converter",
        "description": "This page replaces swearwords with euphemisms.",
        "contentRating": "Mature"
        }
    </script>
    <script src="./index.js" type="module"></script>
</head>

<body>
    <a href="#main-content" class="element-invisible element-focusable skip-link">Skip to main content</a>
    <div class="theme-toggler">
        <p class="light">Light<span class="visually-hidden"> theme inactive</span></p><button type="button"
            aria-pressed="true" aria-label="Toggle theme"><span></span></button>
        <p class="dark">Dark<span class="visually-hidden"> theme active</span></p>
    </div>
    <header class="header">
        <div class="title">
            <p class="h1">Swearword Converter</p>
            <img src="./img/icon.png" alt="" width="48" class="logo">
        </div>
        <nav class="main-navigation">
            <ul>
                <li><a href="./index.html" aria-current="page">Home</a></li>
                <li><a href="./about.html">About</a></li>
            </ul>
        </nav>

    </header>
    <main class="main" id="main-content">
        <h1>Convert Swearwords</h1>
        <div class="container flow">
            <p class="intro">Enter (or copy and paste) any text containing all or some of the following words:
                <i>Arsehole, arsehole, Cunt, cunt, Fuck(ing), fuck(ing), Prick, prick, Twat, twat, Wanker, wanker</i>,
                then click to convert all swearwords to euphemisms.
            </p>
            <div class="row">
                <form id="replace-swearwords">

                    <label>
                        <span><b>Input</b>: Swearwords</span>
                        <textarea class="text-area" name="text-area"></textarea>
                    </label>

                    <button id="convert-text-btn" type="submit" disabled>Convert text</button>


                </form>

                <div class="euphemisms">
                    <h2><b>Output</b>: Euphemisms</h2>
                    <p id="euphemisms" style="border-style: dashed;"></p>
                    <button id="copy-to-clipboard-btn" type="button" disabled>Copy to clipboard</button>
                </div>
            </div>

        </div>
    </main>

    <footer class="footer">
        <a href="https://github.com/chrisnajman/swearword-converter" target="_blank" rel="noopener noreferrer">
            GitHub Repository
        </a>
    </footer>
</body>

</html>

```

index.js
```
import themeSwitcher from "./js-modules/theme.js"
import replaceSwearwords from "./js-modules/replace-swearwords.js"
import copyToClipboard from "./js-modules/copy-to-clipboard.js"

themeSwitcher()
replaceSwearwords()
copyToClipboard()

```

-> replace-swearwords.js
```
import convertSwearwords from "./convert-swearwords.js"
import convertBtnEnable from "./convert-btn-enable.js"
import copyBtnEnable from "./copy-to-clipboard-btn-enable.js"
import autoResizeTextArea from "./auto-resize-textarea.js"

export default function replaceSwearwords() {
  const replaceSwearwords = document.getElementById("replace-swearwords")
  replaceSwearwords.addEventListener("submit", (e) => {
    e.preventDefault()
    const euphemismsP = document.querySelector(".euphemisms p")
    euphemismsP.style = "border-style: solid;"
    convertSwearwords()
    copyBtnEnable()
  })
  convertBtnEnable()
  autoResizeTextArea()
}


```

-> -> convert-swearwords.js
```
export default function convertSwearwords() {
  let textAreaVal = document.querySelector("textarea").value
  const euphemisms = document.getElementById("euphemisms")

  const swearWords = [
    "Fuck",
    "fuck",
    "Cunt",
    "cunt",
    "Twat",
    "twat",
    "Prick",
    "prick",
    "Wanker",
    "wanker",
    "Arsehole",
    "arsehole",
  ]

  let vocab = swearWords.join("|")

  // Create a dynamic regular expression
  const regex = new RegExp(vocab, "g")

  // Use the dynamic regex in the replace function
  textAreaVal = textAreaVal.replace(regex, (match) => {
    // Handle replacements for matched swear words
    switch (match) {
      case "Fuck":
        return "Feck"
      case "fuck":
        return "feck"
      case "Cunt":
        return "Clot"
      case "cunt":
        return "clot"
      case "Twat":
        return "Twerp"
      case "twat":
        return "twerp"
      case "Prick":
        return "Prong"
      case "prick":
        return "prong"
      case "Wanker":
        return "Wally"
      case "wanker":
        return "wally"
      case "Arsehole":
        return "Ass"
      case "arsehole":
        return "ass"
    }
  })
  euphemisms.textContent = textAreaVal
}


```

-> -> convert-btn-enable.js
```
export default function convertBtnEnable() {
  const textArea = document.querySelector("textarea")
  const convertButton = document.getElementById("convert-text-btn")

  textArea.addEventListener("input", () => {
    if (textArea.value.trim() !== "") {
      convertButton.removeAttribute("disabled")
    }
  })
}


```

-> -> copy-to-clipboard-btn-enable.js
```
export default function copyBtnEnable() {
  const convertedText = document.getElementById("euphemisms")
  const copyBtn = document.getElementById("copy-to-clipboard-btn")

  if (convertedText.textContent.trim() !== "") {
    copyBtn.removeAttribute("disabled")
  }
}


```

-> -> auto-resize-textarea.js
```
export default function autoResizeTextArea() {
  const text = document.querySelector("textarea")
  text.addEventListener(
    "input",
    () => {
      text.style.height = text.scrollHeight / 16 + "rem"
    },
    false
  )
}


```

-> copy-to-clipboard.js
```
export default function copyToClipboard() {
  const text = document.getElementById("euphemisms")
  const copyToClipboardBtn = document.getElementById("copy-to-clipboard-btn")

  copyToClipboardBtn.addEventListener("click", () => {
    copyText(text)
  })

  async function copyText(htmlElement) {
    if (!htmlElement) {
      return
    }

    let elementText = htmlElement.textContent

    try {
      await navigator.clipboard.writeText(elementText)
      alert("Text copied to clipboard!")
    } catch (err) {
      console.error("Failed to copy text: ", err)
      alert("Failed to copy text to clipboard.")
    }
  }
}


```